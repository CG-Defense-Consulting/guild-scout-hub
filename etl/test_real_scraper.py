#!/usr/bin/env python3
"""
Real scraper test - tests actual web scraping functionality
"""

import os
import sys
from pathlib import Path

# Add parent directory to path for imports
sys.path.append(str(Path(__file__).parent))

def test_real_scraper():
    """Test the actual scraper with a real solicitation number."""
    
    print("Testing DIBBS scraper with real web requests...")
    print("‚ö†Ô∏è  This will attempt to access the DIBBS website")
    
    try:
        # Test imports
        print("‚úì Testing imports...")
        from core.scrapers.dibbs_scraper import DibbsScraper
        from utils.logger import setup_logger
        print("  ‚úì All imports successful")
        
        # Set up logging
        logger = setup_logger("test_real_scraper", level=20)  # INFO level
        
        # Test solicitation number (you can change this to a real one)
        test_solicitation = "SPE7L3-24-R-0001"  # Example format
        
        print(f"‚úì Testing with solicitation: {test_solicitation}")
        
        # Initialize scraper with headless=False to see what's happening
        print("‚úì Initializing scraper...")
        scraper = DibbsScraper(headless=False)  # Set to False to see the browser
        print("  ‚úì Scraper initialized successfully")
        
        # Test PDF download
        print("‚úì Testing PDF download...")
        print("  This will open a browser and attempt to download the PDF...")
        
        result = scraper.search_solicitation(test_solicitation)
        
        if result:
            print(f"  ‚úì Success! Downloaded PDF: {result.get('pdf_path')}")
            print(f"  ‚úì URL: {result.get('url')}")
            
            # Test PDF processing
            print("‚úì Testing PDF processing...")
            from core.processors.pdf_processor import PDFProcessor
            processor = PDFProcessor()
            extracted_data = processor.extract_rfq_data(result['pdf_path'])
            
            if extracted_data:
                print(f"  ‚úì PDF processed successfully")
                print(f"  ‚úì Extracted solicitation number: {extracted_data.get('solicitation_number')}")
                print(f"  ‚úì Extracted title: {extracted_data.get('title', 'N/A')[:100]}...")
            else:
                print("  ‚ö† PDF processing failed")
        else:
            print("  ‚ö† No PDF found for this solicitation")
            print("  This could mean:")
            print("    - The solicitation number doesn't exist")
            print("    - The website structure has changed")
            print("    - There are network/access issues")
        
        # Clean up
        print("‚úì Cleaning up...")
        scraper.cleanup()
        print("  ‚úì Cleanup completed")
        
        print("\nüéâ Real scraper test completed!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå Test failed: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üöÄ Starting real scraper test...")
    print("Make sure you have:")
    print("  - Chrome browser installed")
    print("  - Internet connection")
    print("  - Access to DIBBS website")
    print()
    
    success = test_real_scraper()
    if success:
        print("\n‚úÖ Real scraper test completed successfully!")
        sys.exit(0)
    else:
        print("\n‚ùå Real scraper test failed!")
        sys.exit(1)
